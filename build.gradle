buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
        classpath "net.saliman:gradle-cobertura-plugin:2.6.0"
    }
}

version "1.0.10"
group "banner.general.common"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin: "codenarc"
apply plugin: "net.saliman.cobertura"

codenarc {
    toolVersion = '0.27.0'
    def codenarcRulePath = project(":banner-codenarc").projectDir.absolutePath + "/config/codenarc/rules.groovy"
    configFile = file(codenarcRulePath)
    reportFormat = 'html'
    ignoreFailures = true
}

cobertura {
    coverageFormats = ['xml','html']
    coverageIgnoreTrivial = true
    coverageIgnores = ['org.slf4j.Logger.*']             
    //only an example to skip instrumentation
    //coverageIgnoreMethodAnnotations = ['grails.gorm.transactions.Transactional']
    coverageExcludes = ['.Application.',
                        '.BootStrap.',
                        '.UrlMappings.']
    sourceCompatibility = 1.6
    targetCompatibility = 1.6
}    

integrationTest {
        ignoreFailures = true
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
    maven { url "http://central.maven.org/maven2/"}
    maven { url "https://build.shibboleth.net/nexus/content/repositories/releases"}
    maven { url "https://build.shibboleth.net/nexus/content/groups/public/"}
    maven { url "https://code.lds.org/nexus/content/groups/main-repo"}
    maven { url "http://repository.jboss.org/maven2/"}
    maven { url "http://repo.spring.io/milestone/" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
    provided "org.grails:grails-plugin-services"
    provided "org.grails:grails-plugin-domain-class"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.14.2"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.grails:grails-plugin-testing"
    testCompile "org.grails:grails-web-testing-support"


    //Quartz
    compile 'org.grails.plugins:quartz:2.0.11'

    //Added for BannerXE For FileUtils and others
    compile 'commons-io:commons-io:2.6'
    compile 'org.asciidoctor:asciidoctorj:1.5.8'

    compile('org.grails:grails-docs:3.3.2') {
        exclude group:"org.xhtmlrenderer", module:"core-renderer"
        exclude group:"org.jruby", module:"jruby-complete"
        exclude group:"org.asciidoctor", module:"asciidoctorj"

    }
    // specify dependencies here under either 'build', 'compile', 'runtime', 'test' or 'provided' scopes eg.
    // runtime 'mysql:mysql-connector-java:5.1.5'
    compile 'org.xhtmlrenderer:flying-saucer-core:9.1.18'
    compile 'org.xhtmlrenderer:flying-saucer-pdf:9.1.18'
//    compile('org.xhtmlrenderer:flying-saucer-pdf:9.0.8') {
//        excludes 'itext', 'itext-rtf'
//    }
//    compile 'org.xhtmlrenderer:flying-saucer-pdf:9.0.8'
    compile ('com.lowagie:itext:2.1.7'){
        exclude group:"org.bouncycastle", module:"bcprov-jdk14"
        exclude group:"bouncycastle", module:"bcprov-jdk14"
    }
    compile 'org.antlr:ST4:4.0.8'
    compile "javax.mail:javax.mail-api:1.5.5"
    runtime "com.sun.mail:javax.mail:1.5.5"
    compile 'com.icegreen:greenmail:1.5.0'
    compile 'org.apache.commons:commons-email:1.4'
    compile 'org.quartz-scheduler:quartz:2.2.1'

    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.5.Final"

}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}


// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false
grailsPublish {
    // TODO: Provide values here
    user = 'user'
    key = 'key'
    githubSlug = 'foo/bar'
    license {
        name = 'Apache-2.0'
    }
    title = "My Plugin"
    desc = "Full plugin description"
    developers = [johndoe:"John Doe"]
}



assets {
    packagePlugin = true
}

grails {
    plugins {
        compile project(":banner-core")    
        compile project(":banner-general-person")
        compile project(":banner-general-validation-common")
    }
}

sourceSets {
    concurrentTest {
        groovy {
        srcDirs = ['src/concurrent-test'] 
        compileClasspath += main.output 
        runtimeClasspath += main.output    
        }
    }
}

configurations {
    concurrentTestCompile.extendsFrom testCompile
    concurrentTestRuntime.extendsFrom testRuntime
}

task concurrentTest (type: Test) {
    group 'Verification'
    description 'Runs the concurrent tests.'
    testClassesDir = project.sourceSets.concurrentTest.output.classesDir
    classpath += project.sourceSets.concurrentTest.runtimeClasspath
    ignoreFailures = true

    filter {
        includeTestsMatching "*ConcurrentTests*"
    }

    doFirst {
    }

    doLast {
    }
}
